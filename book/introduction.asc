[preface]
== Въведение

Предстои да отделите няколко часа от живота си четейки за Git. Нека обясним накратко какво ще ви предложим. Това е кратко резюме на съдържанието на десетте глави и трите приложения съставящи тази книга.

В *Глава 1* ще опишем принципите на Version Control системите (VCS) и основите на Git - само кратко описание без технически детайли, така че да разберете защо е създаден Git при положение, че вече е имало десетки други решения за контрол на версиите, какво го отличава и защо се използва толкова масово.

В *Глава 2*, ще минем през основните действия в работата с Git, покриващи 80% от случаите, с които ще се сблъскате. В края на тази глава би трябвало да можете да клонирате хранилища (repositories), да проследявате какво се е случило в историята на даден проект, да променяте файлове и да предлагате за интеграция вашите промени в общия проект. Ако в този миг книгата ви по някакъв начин изчезне, то вие ще сте вече напреднали с Git и ще работите пълноценно във времето докато се сдобиете с ново копие.

*Глава 3* е посветена на branching архитектурата на Git (клоновете код), често описвана като най-добрата му страна. Тук ще разберете какво наистина отличава Git от останалите подобни проекти. След като приключите, твърде е възможно да почувствате нужда от малко почивка, в която да осъзнаете как е било възможно да работите без branching-функциите на Git.

*Chapter 4* will cover Git on the server. This chapter is for those of you who want to set up Git
inside your organization or on your own personal server for collaboration. We will also explore
various hosted options if you prefer to let someone else handle that for you.

*Chapter 5* will go over in full detail various distributed workflows and how to accomplish
them with Git. When you are done with this chapter, you should be able to work expertly with
multiple remote repositories, use Git over email and deftly juggle numerous remote branches
and contributed patches.

*Chapter 6* covers the GitHub hosting service and tooling in depth. We cover signing up for and managing an account, creating and using Git repositories, common workflows to contribute to projects and to accept contributions to yours, GitHub's programmatic interface and lots of little tips to make your life easier in general.

*Chapter 7* is about advanced Git commands. Here you will learn about topics like mastering the scary 'reset' command, using binary
search to identify bugs, editing history, revision selection in detail, and a lot more. This
chapter will round out your knowledge of Git so that you are truly a master.

*Chapter 8* is about configuring your custom Git environment. This includes setting up hook
scripts to enforce or encourage customized policies and using environment configuration settings
so you can work the way you want to. We will also cover building your own set of scripts to
enforce a custom committing policy.

*Chapter 9* deals with Git and other VCSs. This includes using Git in a Subversion (SVN) world
and converting projects from other VCSs to Git. A lot of organizations still use SVN and are
not about to change, but by this point you’ll have learned the incredible power of Git—and this
chapter shows you how to cope if you still have to use a SVN server. We also cover how to
import projects from several different systems in case you do convince everyone to make the
plunge.

*Chapter 10* delves into the murky yet beautiful depths of Git internals. Now that you know all
about Git and can wield it with power and grace, you can move on to discuss how Git stores its objects,
what the object model is, details of packfiles, server protocols, and more. Throughout the book,
we will refer to sections of this chapter in case you feel like diving deep at that point;
but if you are like us and want to dive into the technical details, you may want to read Chapter 10 first.
We leave that up to you.

In *Appendix A* we look at a number of examples of using Git in various specific environments. We cover
a number of different GUIs and IDE programming environments that you may want to use Git in and what
is available for you. If you're interested in an overview of using Git in your shell, in Visual Studio
or Eclipse, take a look here.

In *Appendix B* we explore scripting and extending Git through tools like libgit2 and JGit. If you're
interested in writing complex and fast custom tools and need low level Git access, this is where you can
see what that landscape looks like.

Finally in *Appendix C* we go through all the major Git commands one at a time and review where in the book
we covered them and what we did with them. If you want to know where in the book we used any specific Git
command you can look that up here.

Let’s get started.
